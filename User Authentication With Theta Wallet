// FROTEND ReactJS======================
// Create a component for the login page Login.js (with theta network wallet connect)======================

// Import the React useState from react============
import React, { useEffect } from 'react';

const Login = () => {
  useEffect(() => {
    // Load Theta wallet SDK
    const script = document.createElement('script');
    script.src = 'https://wallet.thetatoken.org/theta-connect.js';
    script.async = true;
    document.body.appendChild(script);

    // Set up Theta wallet authentication
    window.addEventListener('theta-loaded', () => {
      window.thetaConnect.setNetwork('mainnet'); // Set the desired network
    });

    return () => {
      // Clean up event listener
      window.removeEventListener('theta-loaded');
    };
  }, []);

  const handleLogin = async () => {
    // Initiate Theta wallet login
    try {
      const walletAddress = await window.thetaConnect.connect();

      // Perform login request to the backend with the wallet address
      const response = await fetch('/api/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ walletAddress }),
      });

      if (response.ok) {
        // Handle successful login
        console.log('Login successful');
      } else {
        // Handle login error
        console.error('Login failed');
      }
    } catch (error) {
      // Handle login error
      console.error('Error occurred during login:', error);
    }
  };

  return (
    <div>
      <h1>Login</h1>
      <button onClick={handleLogin}>Connect with Theta Wallet</button>
    </div>
  );
};

export default Login;


// BACKEND ReactJS======================
//  Backend with (Node.js with Express):======================
// Set up an Express server to handle the backend logic (server.js):

const express = require('express');
const app = express();

app.use(express.json());

app.post('/api/login', (req, res) => {
  const { walletAddress } = req.body;

  // Perform additional authentication logic with the Theta wallet address
  // You can verify the address and create/update user profiles as needed

  if (walletAddress) {
    // Return success response
    res.sendStatus(200);
  } else {
    // Return error response
    res.sendStatus(401);
  }
});

const port = 3000;
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});


