// HTML Structure

<div class="playlist-section">
  <h2>My Playlists</h2>
  <div id="playlist-container"></div>

  <h2>Create Playlist</h2>
  <form id="create-playlist-form">
    <input type="text" id="playlist-name-input" placeholder="Enter playlist name" required />
    <button type="submit">Create</button>
  </form>
</div>


// JAVASCRIPT Structure

// Array to store playlists
let playlists = [];

// Get necessary elements
const playlistContainer = document.getElementById('playlist-container');
const createPlaylistForm = document.getElementById('create-playlist-form');
const playlistNameInput = document.getElementById('playlist-name-input');

// Function to create a new playlist
function createPlaylist(name) {
  const playlist = {
    id: Date.now(), // Generate a unique ID (you can use any other approach)
    name,
    videos: [],
  };

  playlists.push(playlist);
  savePlaylistsToLocalStorage();
  renderPlaylists();
}

// Function to delete a playlist
function deletePlaylist(playlistId) {
  playlists = playlists.filter((playlist) => playlist.id !== playlistId);
  savePlaylistsToLocalStorage();
  renderPlaylists();
}

// Function to save playlists to local storage
function savePlaylistsToLocalStorage() {
  localStorage.setItem('playlists', JSON.stringify(playlists));
}

// Function to retrieve playlists from local storage
function retrievePlaylistsFromLocalStorage() {
  const storedPlaylists = localStorage.getItem('playlists');
  if (storedPlaylists) {
    playlists = JSON.parse(storedPlaylists);
  }
}

// Function to render playlists
function renderPlaylists() {
  playlistContainer.innerHTML = '';

  playlists.forEach((playlist) => {
    const playlistElement = document.createElement('div');
    playlistElement.classList.add('playlist');
    playlistElement.innerHTML = `
      <h3>${playlist.name}</h3>
      <ul>
        ${playlist.videos.map((video) => `<li>${video}</li>`).join('')}
      </ul>
      <button class="delete-button" data-playlist-id="${playlist.id}">Delete</button>
    `;

    const deleteButton = playlistElement.querySelector('.delete-button');
    deleteButton.addEventListener('click', () => deletePlaylist(playlist.id));

    playlistContainer.appendChild(playlistElement);
  });
}

// Event listener for create playlist form submission
createPlaylistForm.addEventListener('submit', (event) => {
  event.preventDefault();
  const playlistName = playlistNameInput.value;
  if (playlistName.trim() !== '') {
    createPlaylist(playlistName);
    playlistNameInput.value = '';
  }
});

// Initialize the app
retrievePlaylistsFromLocalStorage();
renderPlaylists();
